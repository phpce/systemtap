/* This tapset contains only leaf/embedded-c functions so as to avoid
 pulling in unnecessary larger pass-2 computations. */


/* Some syscall interjection mechanisms give us a pt_regs* structure
   for the syscall parameters/context. */
function __set_syscall_pt_regs(r)
%{ /* guru */
  CONTEXT->sregs = (void*)(uintptr_t) STAP_ARG_r;
%}


function _stp_syscall_nr:long ()
%{ /* pure */
  if (CONTEXT->sregs) {
        /* NB: same abi? */
	STAP_RETVALUE = _stp_syscall_get_nr(current, CONTEXT->sregs);
  } else {
	struct pt_regs *regs = _stp_current_pt_regs();
	if (!regs) {
		CONTEXT->last_error = ("Cannot access syscall number"
				       " (no registers available)");
		return;
	}
	STAP_RETVALUE = _stp_syscall_get_nr(current, regs);
  }
%}

